// Copyright 2019, Beeri 15.  All rights reserved.
// Author: Roman Gershman (romange@gmail.com)
//
syntax = "proto2";

package mr3.pb;

message WireFormat {
  enum Type {
    JSON = 1;  // Do we need it? TXT might cover json use-case.
    LST = 2;
    TXT = 3;
  }
  required Type type = 1;
}

message Input {
  required string name = 1;

  required WireFormat format = 2;

  message FileSpec {
    required string url_glob = 1;
    optional string metadata = 2;
  };

  repeated FileSpec file_spec = 4;
}

message Sharding {

}

message Output {
  required string name = 1;
  required WireFormat format = 2;

  enum CompressType {
    NONE = 0;
    GZIP = 1;
  }

  message Compress {
    required CompressType type = 1;
    optional int32 level = 2;
  }

  optional Compress compress = 3;
  optional Sharding sharding = 4;
}


// Can be mapper or joiner.
message Operator {
  repeated string input_name = 1;  // corresponds to the name in Input.name.
  optional string func = 2;

  required Output output = 3;
}

message Pipeline {
  map<string, Input> input = 1;

  repeated Operator operator = 2;
}
