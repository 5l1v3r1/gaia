sudo: enabled
dist: xenial
language: cpp
os: linux

branches:
  only:
    - master

env:
  global:
    - LSAN_OPTIONS=suppressions=$HOME/supress.txt
    - ASAN_OPTIONS=symbolize=1,abort_on_error=1,detect_leaks=1

addons:
  apt:
    packages:
      - doxygen
      - graphviz

cache:
  directories:
  - /opt/boost_1_70_0
  - build-dbg/third_party  # Relative to $TRAVIS_BUILD_DIR
  ccache: true

before_cache:
  - ls $TRAVIS_BUILD_DIR/build-dbg/third_party

before_install:
  # Fix for Ubuntu Xenial apt-daily.service triggering
  # https://unix.stackexchange.com/questions/315502/how-to-disable-apt-daily-service-on-ubuntu-cloud-vm-image
  - |
    sudo systemctl stop apt-daily.timer
    sudo systemctl stop apt-daily.service &&
    sudo systemctl kill --kill-who=all apt-daily.service
    while (pgrep -cf apt.systemd.daily > /dev/null); do
      sleep 1
    done
  - sudo apt update -qq
  - eval "${MATRIX_EVAL}"

install:
  - sudo ./install-dependencies.sh
  - ls -l /opt/

before_script:
  - printf "leak:MallocExtension\nleak:event_base_once" > $HOME/supress.txt
  - cmake --version
  - env

script:
  - mkdir testresults && mkdir -p build-dbg && cd build-dbg
  - cmake -L -DCMAKE_BUILD_TYPE=Debug -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
  - ninja -j4 base array_test dynasm_project libosmium_project
  - ninja protobuf_project
  - tests_list=$(ctest -L CI -N | grep "Test.*#" | cut -f2 -d:| sort)
  - ninja -j4 $tests_list asio_fibers -k 10
  - echo $tests_list |  xargs -n1 -t ../scripts/run_test.sh -l ../testresults -t 25 --name

jobs:
  fast_finish: true
  include:
  - env:
      - MATRIX_EVAL="CC=clang && CXX=clang++"
  - env:
      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
  - env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7

  - stage: deploy
    script:
      - mkdir -p build-dbg && cd build-dbg
      - cmake -L -DCMAKE_BUILD_TYPE=Debug -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
      - ninja doc
    deploy:
      provider: pages
      skip_cleanup: true
      local_dir: build-dbg/doc/html
      github_token: $GH_REPO_TOKEN
      on:
        branch: master

after_failure:
  - pwd
  - find third_party/src/ -regex ".*\(err\|out\).log" | xargs -n 3 -t cat
  - find ../testresults | xargs -n 3 -t cat

